{"version":3,"sources":["Reducer/CoinReducer.js","Context/CoinContext.js","Reducer/AccountReducer.js","Context/AccountContext.js","Controller/CoinController.js","Components/Navigation.js","Components/CoinBlock.js","Components/CoinBlockList.js","Components/Home.js","Components/CoinDetail.js","Components/OrderPriceBlock.js","Components/OrderBook.js","Components/Order.js","Components/ChartPage.js","Components/About.js","Components/CoinTrade.js","App.js","index.js"],"names":["reducer","state","action","type","marketsLoaded","markets","marketsList","realTimeData","map","item","market","code","loaded","orderBook","trade","CoinStateContext","React","createContext","CoinDispatchContext","initialState","nowLooking","CoinProvider","children","useReducer","dispatch","Provider","value","useCoinState","useContext","Error","useCoinDispatch","AccountStateContext","AccountDispatchContext","money","AccountProvider","getMarkets","a","axios","get","rawMarkets","data","filter","includes","getRealTimeData","socket","coinState","coinDispatch","WebSocket","marketsName","onopen","message","send","onmessage","Response","text","JSON","parse","getDetailData","open","console","log","error","close","getCommaNumber","num","toString","replace","getChangeRate","toFixed","Navigation","className","to","class","CoinBlock","info","block","useRef","useEffect","change","ref","id","src","split","korean_name","trade_price","change_price","change_rate","CoinBlockList","sortBy","sortMarkets","index","sort","b","acc_trade_price_24h","slice","acomb","bcomb","Home","CoinDetail","english_name","opening_price","prev_closing_price","high_price","low_price","acc_trade_price","acc_trade_volume","highest_52_week_price","lowest_52_week_price","OrderPriceBlock","props","price","size","OrderBook","bidBlock","orderbook_units","bid_price","bid_size","askBlock","ask_price","ask_size","reverse","idx","Order","params","useParams","find","undefined","ChartPage","useState","chartData","setChartData","lastDataTime","setLastDataTime","options","chart","height","toolbar","show","autoSelected","tools","zoom","events","scrolled","_","xaxis","min","ts","Date","getUTCHours","getUTCFullYear","getUTCMonth","getUTCDate","getUTCMinutes","getUTCSeconds","Axios","response","x","timestamp","y","length","concat","series","width","About","CoinTrade","then","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAEO,SAASA,EAAQC,EAAOC,GAC3B,OAAOA,EAAOC,MACV,IAAK,cACD,kCACOF,GADP,IAEIG,eAAc,IAEtB,IAAK,kBACD,kCACOH,GADP,IAEIG,eAAc,EACdC,QAASH,EAAOG,QAChBC,YAAaJ,EAAOG,UAE5B,IAAK,mBACD,kCACOJ,GADP,IAEIG,eAAc,IAEtB,IAAK,gBACD,OAAIF,EAAOK,aAGX,2BACON,GADP,IAEII,QAASJ,EAAMI,QAAQG,KAAI,SAACC,GACxB,OAAGA,EAAKC,SAAWR,EAAOK,aAAaI,KAC5B,uCAAIF,GAASP,EAAOK,cAA3B,IAAyCK,QAAO,IAE7CH,OARJR,EAWf,IAAK,mBACD,OAAIC,EAAOK,aAGX,2BACON,GADP,IAEII,QAASJ,EAAMI,QAAQG,KAAI,SAACC,GACxB,OAAGA,EAAKC,SAAWR,EAAOK,aAAaI,KAC5B,2BAAIF,GAAX,IAAiBI,UAAWX,EAAOK,eAEhCE,OARJR,EAWf,IAAK,eACD,OAAIC,EAAOK,aAGX,2BACON,GADP,IAEII,QAASJ,EAAMI,QAAQG,KAAI,SAACC,GACxB,OAAGA,EAAKC,SAAWR,EAAOK,aAAaI,KAC5B,2BAAIF,GAAX,IAAiBK,MAAOZ,EAAOK,eAE5BE,OARJR,EAWf,QACI,kCACOA,GADP,IAEII,QAAS,UC5DlB,IAAMU,EAAmBC,IAAMC,cAAc,MACvCC,EAAsBF,IAAMC,cAAc,MAE1CE,EAAe,CACxBf,eAAe,EACfC,QAAS,GACTe,WAAY,IAGT,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACbC,qBAAWvB,EAASmB,GADP,mBAChClB,EADgC,KACzBuB,EADyB,KAEvC,OACE,cAACT,EAAiBU,SAAlB,CAA2BC,MAAOzB,EAAlC,SACE,cAACiB,EAAoBO,SAArB,CAA8BC,MAAOF,EAArC,SACGF,MAMJ,IAAMK,EAAe,WACxB,IAAM1B,EAAQ2B,qBAAWb,GACzB,IAAId,EACA,MAAM,IAAI4B,MAAM,mBAEpB,OAAO5B,GAGE6B,EAAkB,WAC3B,IAAMN,EAAWI,qBAAWV,GAC5B,IAAIM,EACA,MAAM,IAAIK,MAAM,sBAEpB,OAAOL,GCnCJ,SAASxB,EAAQC,EAAOC,GAC3B,OAAOA,EAAOC,MACV,IAAK,cACD,kCACOF,GADP,IAEIG,eAAc,IAEtB,QACI,MAAM,ICNX,IAAM2B,EAAsBf,IAAMC,cAAc,MAC1Ce,EAAyBhB,IAAMC,cAAc,MAE7CE,EAAe,CACxBc,MAAO,SAGJ,SAASC,EAAT,GAAwC,IAAbZ,EAAY,EAAZA,SAAY,EAChBC,qBAAWvB,EAASmB,GADJ,mBACnClB,EADmC,KAC5BuB,EAD4B,KAE1C,OACE,cAACO,EAAoBN,SAArB,CAA8BC,MAAOzB,EAArC,SACE,cAAC+B,EAAuBP,SAAxB,CAAiCC,MAAOF,EAAxC,SACGF,MAMJ,I,wDClBMa,EAAU,uCAAG,8BAAAC,EAAA,sEACGC,IAAMC,IAAI,sDADb,cAChBC,EADgB,OAElBlC,EAAUkC,EAAWC,KAAKC,QAAO,SAAChC,GAClC,OAAOA,EAAKC,OAAOgC,SAAS,WAHV,kBAKfrC,EAAQG,KAAI,SAAAC,GAAS,OAAO,2BAAIA,GAAX,IAAiBG,QAAO,QAL9B,2CAAH,qDASV+B,EAAe,uCAAG,WAAOC,EAAQvC,EAASwC,EAAWC,GAAnC,eAAAV,EAAA,sDAC3BQ,EAAS,IAAIG,UAAU,oCACnBC,EAAc3C,EAAQG,KAAI,SAACC,GAAD,iBAAcA,EAAKC,OAAnB,QAE9BkC,EAAOK,OAAS,WAQZ,IAAMC,EAAO,uDACmCF,EADnC,OAIbJ,EAAOO,KAAKD,IAGhBN,EAAOQ,UAAP,uCAAmB,WAAOF,GAAP,iBAAAd,EAAA,sEACI,IAAIiB,SAASH,EAAQV,MAAMc,OAD/B,OACTA,EADS,OAMQ,YAJjB/C,EAAegD,KAAKC,MAAMF,IAIhBnD,MACZ2C,EAAa,CACT3C,KAAM,gBACNI,iBATO,2CAAnB,sDAnB2B,2CAAH,4DAkCfkD,EAAiB,WAC1B,IAAIb,EACJ,MAAM,CACFc,KAAK,SAAChD,EAAQoC,GAEV,KACIF,EAAS,IAAIG,UAAU,qCAEhBE,OAAS,WACZ,IAAMC,EAAO,gEAC4CxC,EAD5C,6CACuFA,EADvF,QAGbkC,EAAOO,KAAKD,IAGhBN,EAAOQ,UAAP,uCAAmB,WAAOF,GAAP,iBAAAd,EAAA,sEACI,IAAIiB,SAASH,EAAQV,MAAMc,OAD/B,OACTA,EADS,OAET/C,EAAegD,KAAKC,MAAMF,GAEhCK,QAAQC,IAAIrD,GACW,cAApBA,EAAaJ,MACZ2C,EAAa,CACT3C,KAAM,mBACNI,iBAGe,UAApBA,EAAaJ,MACZ2C,EAAa,CACT3C,KAAM,eACNI,iBAdO,2CAAnB,sDAkBF,MAAMsD,GACJF,QAAQC,IAAIC,KAGpBC,MAAM,WACClB,GAAQA,EAAOkB,UAtCA,GA2CjBC,EAAiB,SAACC,GAC3B,OAAIA,EACGA,EAAIC,WAAWC,QAAQ,wBAAyB,KADvC,IAIPC,EAAgB,SAACH,GAC1B,OAAIA,GACI,IAAIA,GAAKI,QAAQ,GADT,I,OCnELC,MAvBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,eAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,IAA1B,UACE,mBAAGD,UAAU,gBACb,wCAEF,eAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,aAA1B,UACE,mBAAGD,UAAU,+BACb,yCAEF,eAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,aAA1B,UACE,mBAAGD,UAAU,sBACb,yCAEF,eAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,SAA1B,UACE,mBAAGC,MAAM,sBACT,6C,cCuBOC,MAzCf,YAA4B,IAARC,EAAO,EAAPA,KACVC,EAAQC,mBAKd,OAHAC,qBAAU,eAIN,qBAAKP,UAAU,YAAf,SACI,qBAAKA,UAAS,mBAAcI,EAAKI,QAAUC,IAAKJ,EAAOK,GAAG,KAA1D,SACI,sBAAKV,UAAU,UAAf,UACI,qBAAKA,UAAU,UAAUW,IAAG,yCAAoCP,EAAKhE,OAAOwE,MAAM,KAAK,GAA3D,UAC5B,sBAAMZ,UAAU,aAAhB,SACKI,EAAKS,cAEV,sBAAMb,UAAU,cAAhB,SACKI,EAAKhE,OAAOwE,MAAM,KAAK,KAE5B,gCACI,sBAAMZ,UAAU,aAAhB,SACKP,EAAeW,EAAKU,eAEzB,gCACI,uBAAMd,UAAU,cAAhB,UACmB,SAAdI,EAAKI,OAAiB,SAAI,GACZ,SAAdJ,EAAKI,OAAiB,SAAI,GACZ,SAAdJ,EAAKI,OAAiB,IAAI,GAC1Bf,EAAeW,EAAKW,iBAEzB,uBAAMf,UAAU,gBAAhB,UACmB,SAAdI,EAAKI,OAAiB,IAAI,GACZ,SAAdJ,EAAKI,OAAiB,IAAI,GAC1BX,EAAcO,EAAKY,aAHxB,qBClBbC,MAXf,YAAkC,IAAVC,EAAS,EAATA,OACd3C,EAAYlB,IAGlB,OACI,qBAAK2C,UAAU,gBAAf,SACKmB,EAAYD,EAAQ3C,GAAWrC,KAAI,SAACC,EAAKiF,GAAN,OAAc,cAAC,EAAD,CAAuBhB,KAAMjE,GAAbiF,SAOxED,EAAc,SAACD,EAAQ3C,GA6BzB,MA3BY,gBAAT2C,EACe3C,EAAUxC,QAAQsF,MAAK,SAACvD,EAAGwD,GACrC,OAAOA,EAAEC,oBAAsBzD,EAAEyD,uBAClCC,MAAM,EAAE,GAEE,SAATN,EACU3C,EAAUxC,QAAQsF,MAAK,SAACvD,EAAGwD,GACrC,IAAIG,EAAQ3D,EAAEkD,YACVU,EAAQJ,EAAEN,YAGd,MAFc,SAAXlD,EAAE0C,SAAiBiB,GAASA,GACjB,SAAXH,EAAEd,SAAiBkB,GAASA,GACxBA,EAAQD,KAChBD,MAAM,EAAE,GAEE,SAATN,EACU3C,EAAUxC,QAAQsF,MAAK,SAACvD,EAAGwD,GACrC,IAAIG,EAAQ3D,EAAEkD,YACVU,EAAQJ,EAAEN,YAGd,MAFc,SAAXlD,EAAE0C,SAAiBiB,GAASA,GACjB,SAAXH,EAAEd,SAAiBkB,GAASA,GACxBD,EAAQC,KAChBF,MAAM,EAAE,GAGCjD,EAAUxC,S,OCpBf4F,MAlBf,WAEI,OACI,sBAAK3B,UAAU,OAAf,UACI,sCACA,qBAAKA,UAAU,OAAf,gDAGA,uEACA,iEACA,iEACA,cAAC,EAAD,CAAekB,OAAQ,gBACvB,cAAC,EAAD,CAAeA,OAAQ,SACvB,cAAC,EAAD,CAAeA,OAAQ,a,OCgFpBU,MA7Ff,YAA6B,IAARxB,EAAO,EAAPA,KACXC,EAAQC,mBAMd,OAJAC,qBAAU,eAKN,qBAAKP,UAAU,aAAf,SACI,qBAAKA,UAAS,oBAAeI,EAAKI,QAAUC,IAAKJ,EAAOK,GAAG,KAA3D,SACI,sBAAKV,UAAU,UAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,UAAUW,IAAG,yCAAoCP,EAAKhE,OAAOwE,MAAM,KAAK,GAA3D,UAC5B,sBAAMZ,UAAU,aAAhB,SACKI,EAAKS,cAEV,sBAAMb,UAAU,cAAhB,SACKI,EAAKhE,OAAOwE,MAAM,KAAK,KAE5B,sBAAMZ,UAAU,kBAAhB,SACKI,EAAKyB,eAEV,sBAAM7B,UAAU,aAAhB,SACKP,EAAeW,EAAKU,eAEzB,uBAAMd,UAAU,cAAhB,UACmB,SAAdI,EAAKI,OAAiB,SAAI,GACZ,SAAdJ,EAAKI,OAAiB,SAAI,GACZ,SAAdJ,EAAKI,OAAiB,IAAI,GAC1Bf,EAAeW,EAAKW,iBAEzB,uBAAMf,UAAU,gBAAhB,UACmB,SAAdI,EAAKI,OAAiB,IAAI,GACZ,SAAdJ,EAAKI,OAAiB,IAAI,GAC1BX,EAAcO,EAAKY,aAHxB,UAMJ,sBAAKhB,UAAU,gBAAf,UACI,sBAAMA,UAAU,cAAhB,kBAGA,sBAAMA,UAAU,oBAAhB,SACKI,EAAK0B,gBAEV,sBAAM9B,UAAU,cAAhB,wBAGA,sBAAMA,UAAU,oBAAhB,SACKI,EAAK2B,qBAEV,sBAAM/B,UAAU,cAAhB,kBAGA,sBAAMA,UAAU,oBAAhB,SACKI,EAAK4B,aAEV,sBAAMhC,UAAU,cAAhB,iBAGA,sBAAMA,UAAU,oBAAhB,SACKI,EAAK6B,YAEV,sBAAMjC,UAAU,cAAhB,6BAGA,sBAAMA,UAAU,oBAAhB,SACKI,EAAK8B,gBAAgBpC,QAAQ,KAElC,sBAAME,UAAU,cAAhB,4BAGA,sBAAMA,UAAU,oBAAhB,SACKI,EAAK+B,iBAAiBrC,QAAQ,KAEnC,sBAAME,UAAU,cAAhB,0BAGA,sBAAMA,UAAU,oBAAhB,SACKI,EAAKgC,wBAEV,sBAAMpC,UAAU,cAAhB,yBAGA,sBAAMA,UAAU,oBAAhB,SACKI,EAAKiC,kCCpDnBC,MAlCf,YAAmC,IAATC,EAAQ,EAARA,MACd1G,EAAqB0G,EAArB1G,KAAM2G,EAAeD,EAAfC,MAAOC,EAAQF,EAARE,KAErB,MAAU,QAAP5G,EAGS,sBAAKmE,UAAU,kBAAkBU,GAAI7E,EAArC,UACI,qBAAKmE,UAAU,YAEf,qBAAKA,UAAU,QAAf,SACKP,EAAe+C,KAEpB,qBAAKxC,UAAU,UAAf,SACKyC,EAAK3C,QAAQ,QAO1B,sBAAKE,UAAU,kBAAkBU,GAAI7E,EAArC,UACI,qBAAKmE,UAAU,UAAf,SACKyC,EAAK3C,QAAQ,KAElB,qBAAKE,UAAU,QAAf,SACKP,EAAe+C,KAEpB,qBAAKxC,UAAU,gB,OCMhB0C,MA/Bf,YAA2B,IAAPtC,EAAM,EAANA,KAEhB,GAAGA,EAAK7D,UACR,CACI,IAAMoG,EAAWvC,EAAK7D,UAAUqG,gBAAgB1G,KAAI,SAACC,GACjD,MAAO,CAAEN,KAAK,MAAO2G,MAAOrG,EAAK0G,UAAWJ,KAAMtG,EAAK2G,aAErDC,EAAW3C,EAAK7D,UAAUqG,gBAAgB1G,KAAI,SAACC,GACjD,MAAO,CAAEN,KAAK,MAAO2G,MAAOrG,EAAK6G,UAAWP,KAAMtG,EAAK8G,aACxDC,UAEH,OACI,sBAAKlD,UAAU,YAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,6CACA,6CACA,gDAEH+C,EAAS7G,KAAI,SAACC,EAAKgH,GAAN,OAAY,cAAC,EAAD,CAAiBZ,MAAOpG,GAAWgH,MAC5DR,EAASzG,KAAI,SAACC,EAAKgH,GAAN,OAAY,cAAC,EAAD,CAAiBZ,MAAOpG,GAAWgH,SAKzE,OACI,qBAAKnD,UAAU,YAAf,yBCYOoD,MAlCf,WACI,IAAM7E,EAAYlB,IACZmB,EAAehB,IACf6F,EAASC,cAAY5C,GAErBtE,EAASmC,EAAUxC,QAAQwH,MAAK,SAAApH,GAAI,OAAIA,EAAKC,OAAOwE,MAAM,KAAK,KAAKyC,KAW1E,OAVA9C,qBAAU,WAKN,OAJAlB,QAAQC,IAAIlD,GACTA,GACC+C,EAAcC,KAAKhD,EAAOA,OAAQoC,GAE/B,WACHW,EAAcK,WAEpB,CAAC6D,IAGC,sBAAKrD,UAAU,QAAf,UACI,4CACUwD,IAATpH,GACG,iDACoBiH,UAGdG,IAATpH,GAAsBA,EAAOE,QAC9B,qCACI,cAAC,EAAD,CAAY8D,KAAMhE,IAClB,cAAC,EAAD,CAAWgE,KAAMhE,W,kBC0DlBqH,MAtFf,WAAqB,IAAD,EACkBC,mBAAS,CAAC,KAD5B,mBACTC,EADS,KACEC,EADF,OAEwBF,mBAAS,CAAC,EAAE,IAFpC,mBAETG,EAFS,KAEKC,EAFL,KAIVvF,EAAYlB,IAGZgG,GAFe7F,IAEN8F,cAAY5C,IAErBtE,EAASmC,EAAUxC,QAAQwH,MAAK,SAAApH,GAAI,OAAIA,EAAKC,OAAOwE,MAAM,KAAK,KAAKyC,KAEpEU,EAAU,CACdC,MAAO,CACLnI,KAAM,cACNoI,OAAQ,IACRC,QAAQ,CACJC,MAAK,EACLC,aAAa,MACbC,MAAM,CACFC,MAAK,IAGbC,OAAO,CACHC,SAAS,WAAD,4BAAE,WAAMC,EAAN,0BAAA3G,EAAA,4DAAW4G,EAAX,EAAWA,OACRC,IAAId,EAAa,IADpB,wBAEIe,EAAK,IAAIC,KAAKhB,EAAa,IAETjF,EAArBgG,EAAGE,cAAc,GAAW,iEAA6DzB,EAA7D,kBAA6EQ,EAAa,GAAGa,EAAMC,IAAnG,eAA6GC,EAAGG,iBAAhH,YAAoIH,EAAGI,cAAc,EAArJ,YAA0JJ,EAAGK,aAA7J,aAA8KL,EAAGE,cAAjL,YAAkMF,EAAGM,gBAArM,YAAwNN,EAAGO,iBAC9O,iEAA6D9B,EAA7D,kBAA6EQ,EAAa,GAAGa,EAAMC,IAAnG,eAA6GC,EAAGG,iBAAhH,YAAoIH,EAAGI,cAAc,EAArJ,YAA0JJ,EAAGK,aAA7J,YAA6KL,EAAGE,cAAhL,YAAiMF,EAAGM,gBAApM,YAAuNN,EAAGO,iBALpO,SAOqBC,IAAMpH,IAAIY,GAP/B,OAOIyG,EAPJ,OAQInH,EAAOmH,EAASnH,KAAKhC,KAAI,SAACC,GAC5B,MAAO,CACHmJ,EAAG,IAAIT,KAAK1I,EAAKoJ,WACjBC,EAAE,CACErJ,EAAK2F,cACL3F,EAAK6F,WACL7F,EAAK8F,UACL9F,EAAK2E,iBAGdoC,UACHY,EAAgB,CAACY,EAAMC,IAAId,EAAa,GAAIa,EAAMC,IAAId,EAAa,GAAIwB,EAASnH,KAAKmH,EAASnH,KAAKuH,OAAO,GAAGF,YAC7G3B,EAAa,CAAC,CAAC1F,KAAKA,EAAKwH,OAAO/B,EAAU,GAAGzF,SApB3C,4CAAF,qDAAC,MA6CjB,OAlBAqC,oBAAS,sBAAC,8BAAAzC,EAAA,sEACiBsH,IAAMpH,IAAN,iEAAoEqF,EAApE,cADjB,OACAgC,EADA,OAEAnH,EAAOmH,EAASnH,KAAKhC,KAAI,SAACC,GAC5B,MAAO,CACHmJ,EAAG,IAAIT,KAAK1I,EAAKoJ,WACjBC,EAAE,CACErJ,EAAK2F,cACL3F,EAAK6F,WACL7F,EAAK8F,UACL9F,EAAK2E,aAETyE,UAAWpJ,EAAKoJ,cAErBrC,UACHU,EAAa,CAAC,CAAC1F,KAAKA,KACpB4F,EAAgB,CAAC,EAAE5F,EAAK,GAAGqH,YAfrB,2CAgBR,CAAClC,IAGC,sBAAKrD,UAAU,YAAf,UACI,0CAAaqD,KACb,6BAAKQ,EAAa,UACRL,IAATpH,GACG,iDACoBiH,KAGvBjH,GACD,mCACE,cAAC,IAAD,CAAgB2H,QAASA,EAAS4B,OAAQhC,EAAW9H,KAAK,cAAc+J,MAAO,YClE9EC,MAnBf,WACI,OACI,sBAAK7F,UAAU,QAAf,UACI,uCACA,0FACA,0LACA,4FACA,wCACA,2EACA,8CACA,4MACA,2CACA,4EACA,mDACA,yDC6DG8F,MA1Df,WACI,IAAMvH,EAAYlB,IACZmB,EAAehB,IAkCrB,OA/BA+C,qBAAU,WAIN,IAAIjC,EAHJE,EAAa,CACT3C,KAAK,gBAGT,IACIgC,IACCkI,MAAK,SAAChK,GAKH,OAJAyC,EAAa,CACT3C,KAAM,kBACNE,YAEGA,KAEVgK,MAAK,SAAChK,GACHyC,EAAa,CACT3C,KAAM,kBAEVwC,EAAgBC,EAAQvC,EAASwC,EAAWC,MAElD,MAAMe,GACJF,QAAQC,IAAIC,GACZf,EAAa,CACT3C,KAAM,qBAGd,OAAO,WACAyC,KAET,CAACE,IAGC,sBAAKwB,UAAU,YAAf,UACI,qBAAKA,UAAU,WACf,eAAC,IAAD,WACI,cAAC,EAAD,IACA,qBAAKA,UAAU,WAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgG,KAAK,IAAIC,OAAK,EAACC,UAAWvE,IACjC,cAAC,IAAD,CAAOqE,KAAK,aAAaC,OAAK,EAACC,UAAW9C,IAC1C,cAAC,IAAD,CAAO4C,KAAK,aAAaC,OAAK,EAACC,UAAWzC,IAC1C,cAAC,IAAD,CAAOuC,KAAK,WAAWC,OAAK,EAACC,UAAWvE,IACxC,cAAC,IAAD,CAAOqE,KAAK,SAASC,OAAK,EAACC,UAAWL,IACtC,cAAC,IAAD,CAAOG,KAAK,KAAKC,OAAK,EAAtB,oCC/CTE,MAZf,WACE,OACE,qBAAKnG,UAAU,MAAf,SACE,cAACpC,EAAD,UACE,cAACb,EAAD,UACE,cAAC,EAAD,WCPVqJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c28713da.chunk.js","sourcesContent":["import { act } from \"@testing-library/react\";\r\n\r\nexport function reducer(state, action) {\r\n    switch(action.type){\r\n        case 'GET_MARKETS':\r\n            return{\r\n                ...state,\r\n                marketsLoaded:false\r\n            }\r\n        case 'GET_MARKETS_SUC':\r\n            return{\r\n                ...state,\r\n                marketsLoaded:true,\r\n                markets: action.markets,\r\n                marketsList: action.markets\r\n            }\r\n        case 'GET_MARKETS_FAIL':\r\n            return{\r\n                ...state,\r\n                marketsLoaded:false\r\n            }\r\n        case 'UPDATE_MARKET':\r\n            if(!action.realTimeData){\r\n                return state;\r\n            }\r\n            return{\r\n                ...state,\r\n                markets: state.markets.map((item)=>{\r\n                    if(item.market === action.realTimeData.code){\r\n                        return {...item, ...action.realTimeData, loaded:true}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        case 'UPDATE_ORDERBOOK':\r\n            if(!action.realTimeData){\r\n                return state;\r\n            }\r\n            return{\r\n                ...state,\r\n                markets: state.markets.map((item)=>{\r\n                    if(item.market === action.realTimeData.code){\r\n                        return {...item, orderBook: action.realTimeData}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        case 'UPDATE_TRADE':\r\n            if(!action.realTimeData){\r\n                return state;\r\n            }\r\n            return{\r\n                ...state,\r\n                markets: state.markets.map((item)=>{\r\n                    if(item.market === action.realTimeData.code){\r\n                        return {...item, trade: action.realTimeData}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        default:    \r\n            return{\r\n                ...state,\r\n                markets: 'test'\r\n            }\r\n    }\r\n}\r\n","import React, {useContext, useReducer} from 'react'\r\nimport {reducer} from '../Reducer/CoinReducer';\r\n\r\nexport const CoinStateContext = React.createContext(null);\r\nexport const CoinDispatchContext = React.createContext(null);\r\n\r\nexport const initialState = {\r\n    marketsLoaded: false,\r\n    markets: [],\r\n    nowLooking: ''\r\n}\r\n\r\nexport function CoinProvider({ children }) {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    return (\r\n      <CoinStateContext.Provider value={state}>\r\n        <CoinDispatchContext.Provider value={dispatch}>\r\n          {children}\r\n        </CoinDispatchContext.Provider>\r\n      </CoinStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useCoinState = () => {\r\n    const state = useContext(CoinStateContext);\r\n    if(!state){\r\n        throw new Error(\"State not found\")\r\n    }\r\n    return state\r\n}\r\n\r\nexport const useCoinDispatch = () => {\r\n    const dispatch = useContext(CoinDispatchContext);\r\n    if(!dispatch){\r\n        throw new Error('dispatch not found')\r\n    }\r\n    return dispatch\r\n}\r\n","\r\nexport function reducer(state, action) {\r\n    switch(action.type){\r\n        case 'GET_MARKETS':\r\n            return{\r\n                ...state,\r\n                marketsLoaded:false\r\n            }\r\n        default:\r\n            return{\r\n                \r\n            }\r\n    }\r\n}\r\n","import React, {useContext, useReducer} from 'react'\r\nimport {reducer} from '../Reducer/AccountReducer';\r\n\r\nexport const AccountStateContext = React.createContext(null);\r\nexport const AccountDispatchContext = React.createContext(null);\r\n\r\nexport const initialState = {\r\n    money: '10000'\r\n}\r\n\r\nexport function AccountProvider({ children }) {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    return (\r\n      <AccountStateContext.Provider value={state}>\r\n        <AccountDispatchContext.Provider value={dispatch}>\r\n          {children}\r\n        </AccountDispatchContext.Provider>\r\n      </AccountStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useAccountState = () => {\r\n    const state = useContext(AccountStateContext);\r\n    if(!state){\r\n        throw new Error(\"AState not found\")\r\n    }\r\n    return state\r\n}\r\n\r\nexport const useAccountDispatch = () => {\r\n    const dispatch = useContext(AccountDispatchContext);\r\n    if(!dispatch){\r\n        throw new Error('Adispatch not found')\r\n    }\r\n    return dispatch\r\n}\r\n","import axios from 'axios';\r\n\r\n//Get market list\r\nexport const getMarkets = async () => {\r\n    const rawMarkets = await axios.get('https://api.upbit.com/v1/market/all?isDetails=true')\r\n    let markets = rawMarkets.data.filter((item)=>{\r\n        return item.market.includes('KRW-')\r\n    })\r\n    return markets.map(item => {return {...item, loaded:false}})\r\n}\r\n\r\n//Get market's basic value\r\nexport const getRealTimeData = async (socket, markets, coinState, coinDispatch) => {\r\n    socket = new WebSocket('wss://api.upbit.com/websocket/v1');\r\n    let marketsName = markets.map((item) => `\"${item.market}\"`)\r\n    \r\n    socket.onopen = () =>{\r\n        // const message = \r\n        // `[{\"ticket\":\"test\"},{\"type\":\"trade\",\"codes\":[${marketsName}]},{\"type\":\"orderbook\",\"codes\":[${marketsName}]},{\"type\":\"ticker\",\"codes\":[${marketsName}]}]`;\r\n        \r\n        // const message = \r\n        // `[{\"ticket\":\"asdlkfjasdljk\"},{\"type\":\"trade\",\"codes\":[${marketName}]},{\"type\":\"orderbook\",\"codes\":[${marketName}]}]`;\r\n\r\n\r\n        const message = \r\n        `[{\"ticket\":\"test\"},{\"type\":\"ticker\",\"codes\":[${marketsName}]}]`;\r\n\r\n\r\n        socket.send(message);\r\n    }\r\n    \r\n    socket.onmessage = async (message)=>{\r\n        const text = await new Response(message.data).text();\r\n        const realTimeData = JSON.parse(text)\r\n        \r\n        // console.log(realTimeData)\r\n\r\n        if(realTimeData.type===\"ticker\") {\r\n            coinDispatch({\r\n                type: \"UPDATE_MARKET\",\r\n                realTimeData\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getDetailData = (() =>{\r\n    let socket;\r\n    return{\r\n        open:(market, coinDispatch)=>{\r\n            \r\n            try{\r\n                socket = new WebSocket('wss://api.upbit.com/websocket/v1');\r\n                \r\n                socket.onopen = ()=>{\r\n                    const message = \r\n                    `[{\"ticket\":\"asdlkfjasdljk\"},{\"type\":\"trade\",\"codes\":[\"${market}\"]},{\"type\":\"orderbook\",\"codes\":[\"${market}\"]}]`;\r\n                    \r\n                    socket.send(message);\r\n                }\r\n\r\n                socket.onmessage = async (message)=>{\r\n                    const text = await new Response(message.data).text();\r\n                    const realTimeData = JSON.parse(text)\r\n            \r\n                    console.log(realTimeData)\r\n                    if(realTimeData.type===\"orderbook\") {\r\n                        coinDispatch({\r\n                            type: \"UPDATE_ORDERBOOK\",\r\n                            realTimeData\r\n                        })\r\n                    }\r\n                    if(realTimeData.type===\"trade\"){\r\n                        coinDispatch({\r\n                            type: \"UPDATE_TRADE\",\r\n                            realTimeData\r\n                        })\r\n                    }\r\n                }\r\n            } catch(error){\r\n                console.log(error)\r\n            }\r\n        },\r\n        close:()=>{\r\n            if(socket) socket.close();\r\n        }\r\n    }\r\n})();\r\n\r\nexport const getCommaNumber = (num) =>{\r\n    if(!num) return ''\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");   \r\n}\r\n\r\nexport const getChangeRate = (num) => {\r\n    if(!num) return ''\r\n    return (100*num).toFixed(2);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport '../CSS/Navigation.css'\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link className=\"link\" to=\"/\">\r\n        <i className=\"fas fa-home\"></i>\r\n        <p>Home</p>\r\n      </Link>\r\n      <Link className=\"link\" to=\"/order/BTC\">\r\n        <i className=\"fas fa-file-invoice-dollar\"></i>\r\n        <p>Order</p>\r\n      </Link>\r\n      <Link className=\"link\" to=\"/chart/BTC\">\r\n        <i className=\"fas fa-chart-line\"></i>\r\n        <p>Chart</p>\r\n      </Link>\r\n      <Link className=\"link\" to=\"/about\">\r\n        <i class=\"far fa-smile-wink\"></i>\r\n        <p>About</p>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { useEffect, useRef } from 'react';\r\nimport { getChangeRate, getCommaNumber } from '../Controller/CoinController';\r\nimport '../CSS/CoinBlock.css'\r\n\r\nfunction CoinBlock({info}) {\r\n    const block = useRef();\r\n\r\n    useEffect(()=>{\r\n    })\r\n\r\n    return(\r\n        <div className=\"CoinBlock\">\r\n            <div className={`CoinBlock${info.change}`} ref={block} id=\"cb\">\r\n                <div className=\"content\">\r\n                    <img className=\"coinImg\" src={`https://static.upbit.com/logos/${info.market.split('-')[1]}.png`}/>\r\n                    <span className=\"koreanName\">\r\n                        {info.korean_name}\r\n                    </span> \r\n                    <span className=\"englishName\">\r\n                        {info.market.split('-')[1]}\r\n                    </span>\r\n                    <div>\r\n                        <span className=\"tradePrice\">\r\n                            {getCommaNumber(info.trade_price)}\r\n                        </span>\r\n                        <div>\r\n                            <span className=\"changePrice\">\r\n                                {info.change===\"RISE\"? \"▲\":\"\"}\r\n                                {info.change===\"FALL\"? \"▼\":\"\"}\r\n                                {info.change===\"EVEN\"? \"0\":\"\"}\r\n                                {getCommaNumber(info.change_price)}\r\n                            </span>\r\n                            <span className=\"changePercent\">\r\n                                {info.change===\"RISE\"? \"+\":\"\"}\r\n                                {info.change===\"FALL\"? \"-\":\"\"}\r\n                                {getChangeRate(info.change_rate)}%\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinBlock;\r\n","import { useCoinState } from \"../Context/CoinContext\";\r\nimport CoinBlock from \"./CoinBlock\";\r\n\r\nfunction CoinBlockList({sortBy}) {\r\n    const coinState = useCoinState();\r\n    let showMarkets = []\r\n\r\n    return(\r\n        <div className=\"CoinBlockList\">\r\n            {sortMarkets(sortBy, coinState).map((item,index)=><CoinBlock key={index} info={item}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinBlockList;\r\n\r\nconst sortMarkets = (sortBy, coinState) =>{\r\n    let showMarkets = []\r\n    if(sortBy===\"trade_price\"){\r\n        showMarkets = coinState.markets.sort((a, b)=>{\r\n            return b.acc_trade_price_24h - a.acc_trade_price_24h;\r\n        }).slice(0,5)\r\n    }\r\n    else if(sortBy===\"RISE\"){\r\n        showMarkets = coinState.markets.sort((a, b)=>{\r\n            let acomb = a.change_rate\r\n            let bcomb = b.change_rate\r\n            if(a.change===\"FALL\") acomb = -acomb;\r\n            if(b.change===\"FALL\") bcomb = -bcomb;\r\n            return bcomb - acomb;\r\n        }).slice(0,5)\r\n    }\r\n    else if(sortBy===\"FALL\"){\r\n        showMarkets = coinState.markets.sort((a, b)=>{\r\n            let acomb = a.change_rate\r\n            let bcomb = b.change_rate\r\n            if(a.change===\"FALL\") acomb = -acomb;\r\n            if(b.change===\"FALL\") bcomb = -bcomb;\r\n            return acomb - bcomb;\r\n        }).slice(0,5)\r\n    }\r\n    else{\r\n        showMarkets=coinState.markets\r\n    }\r\n\r\n    return showMarkets\r\n}\r\n","import { useEffect } from \"react\";\r\nimport CoinBlockList from \"./CoinBlockList\";\r\nimport '../CSS/Home.css'\r\n\r\nfunction Home() {\r\n    \r\n    return(\r\n        <div className=\"Home\">\r\n            <h1>Home</h1>\r\n            <div className=\"Main\">\r\n                Real Time Crypto Currency Exchange\r\n            </div>\r\n            <h1>거래대금 상위</h1>\r\n            <h1>상승률 상위</h1>\r\n            <h1>하락률 상위</h1>\r\n            <CoinBlockList sortBy={\"trade_price\"} />\r\n            <CoinBlockList sortBy={\"RISE\"} />\r\n            <CoinBlockList sortBy={\"FALL\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import { useEffect, useRef } from 'react';\r\nimport { getChangeRate, getCommaNumber } from '../Controller/CoinController';\r\nimport '../CSS/CoinDetail.css'\r\n\r\nfunction CoinDetail({info}) {\r\n    const block = useRef();\r\n\r\n    useEffect(()=>{\r\n\r\n    })\r\n\r\n    return(\r\n        <div className=\"CoinDetail\">\r\n            <div className={`CoinDetail${info.change}`} ref={block} id=\"cd\">\r\n                <div className=\"content\">\r\n                    <div className=\"mainContent\">\r\n                        <img className=\"coinImg\" src={`https://static.upbit.com/logos/${info.market.split('-')[1]}.png`}/>\r\n                        <span className=\"koreanName\">\r\n                            {info.korean_name}\r\n                        </span> \r\n                        <span className=\"englishName\">\r\n                            {info.market.split('-')[1]}\r\n                        </span>\r\n                        <span className=\"englishFullName\">\r\n                            {info.english_name}\r\n                        </span>\r\n                        <span className=\"tradePrice\">\r\n                            {getCommaNumber(info.trade_price)}\r\n                        </span>\r\n                        <span className=\"changePrice\">\r\n                            {info.change===\"RISE\"? \"▲\":\"\"}\r\n                            {info.change===\"FALL\"? \"▼\":\"\"}\r\n                            {info.change===\"EVEN\"? \"0\":\"\"}\r\n                            {getCommaNumber(info.change_price)}\r\n                        </span>\r\n                        <span className=\"changePercent\">\r\n                            {info.change===\"RISE\"? \"+\":\"\"}\r\n                            {info.change===\"FALL\"? \"-\":\"\"}\r\n                            {getChangeRate(info.change_rate)}%\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"detailContent\">\r\n                        <span className=\"detailTitle\">\r\n                            OPEN\r\n                        </span>\r\n                        <span className=\"detailDescription\">\r\n                            {info.opening_price}\r\n                        </span>\r\n                        <span className=\"detailTitle\">\r\n                            PREV CLOSE\r\n                        </span>\r\n                        <span className=\"detailDescription\">\r\n                            {info.prev_closing_price}\r\n                        </span>\r\n                        <span className=\"detailTitle\">\r\n                            HIGH\r\n                        </span>\r\n                        <span className=\"detailDescription\">\r\n                            {info.high_price}\r\n                        </span>\r\n                        <span className=\"detailTitle\">\r\n                            LOW\r\n                        </span>\r\n                        <span className=\"detailDescription\">\r\n                            {info.low_price}\r\n                        </span>\r\n                        <span className=\"detailTitle\">\r\n                            24H VOLUME(WON)\r\n                        </span>\r\n                        <span className=\"detailDescription\">\r\n                            {info.acc_trade_price.toFixed(2)}\r\n                        </span>\r\n                        <span className=\"detailTitle\">\r\n                            24H VOLUME(EA)\r\n                        </span>\r\n                        <span className=\"detailDescription\">\r\n                            {info.acc_trade_volume.toFixed(2)}\r\n                        </span>\r\n                        <span className=\"detailTitle\">\r\n                            52 WEEK HIGH\r\n                        </span>\r\n                        <span className=\"detailDescription\">\r\n                            {info.highest_52_week_price}\r\n                        </span>\r\n                        <span className=\"detailTitle\">\r\n                            52 WEEK LOW\r\n                        </span>\r\n                        <span className=\"detailDescription\">\r\n                            {info.lowest_52_week_price}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinDetail;\r\n","import { getCommaNumber } from \"../Controller/CoinController\";\r\n\r\nfunction OrderPriceBlock({props}) {\r\n    const { type, price, size} = props\r\n\r\n    if(type===\"bid\")\r\n    {\r\n        return(\r\n                <div className=\"OrderPriceBlock\" id={type}>\r\n                    <div className=\"askSize\">\r\n                    </div>\r\n                    <div className=\"price\">\r\n                        {getCommaNumber(price)}\r\n                    </div>\r\n                    <div className=\"bidSize\">\r\n                        {size.toFixed(2)}\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"OrderPriceBlock\" id={type}>\r\n                <div className=\"askSize\">\r\n                    {size.toFixed(2)}\r\n                </div>\r\n                <div className=\"price\">\r\n                    {getCommaNumber(price)}\r\n                </div>\r\n                <div className=\"bidSize\">\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderPriceBlock;","import { render } from \"@testing-library/react\";\r\nimport OrderPriceBlock from \"./OrderPriceBlock\";\r\nimport '../CSS/OrderBook.css';\r\n\r\nfunction OrderBook({info}){\r\n\r\n    if(info.orderBook)\r\n    {   //set bid\r\n        const bidBlock = info.orderBook.orderbook_units.map((item)=>{\r\n            return { type:\"bid\", price: item.bid_price, size: item.bid_size }\r\n        })\r\n        const askBlock = info.orderBook.orderbook_units.map((item)=>{\r\n            return { type:\"ask\", price: item.ask_price, size: item.ask_size }\r\n        }).reverse()\r\n        \r\n        return(\r\n            <div className=\"OrderBook\">\r\n                <div className=\"OrderPriceBlockDiscription\">\r\n                    <p>매도</p>\r\n                    <p>호가</p>\r\n                    <p>매수</p>\r\n                </div>\r\n                {askBlock.map((item,idx)=><OrderPriceBlock props={item} key={idx} />)}\r\n                {bidBlock.map((item,idx)=><OrderPriceBlock props={item} key={idx} />)}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <div className=\"OrderBook\">\r\n            Waiting...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderBook;","import { useParams } from \"react-router-dom\";\r\nimport { useCoinDispatch, useCoinState } from \"../Context/CoinContext\";\r\nimport CoinDetail from '../Components/CoinDetail';\r\nimport OrderBook from \"./OrderBook\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { getDetailData } from \"../Controller/CoinController\";\r\n\r\nfunction Order() {\r\n    const coinState = useCoinState();\r\n    const coinDispatch = useCoinDispatch();\r\n    const params = useParams().id;\r\n    \r\n    const market = coinState.markets.find(item => item.market.split('-')[1]===params)\r\n    useEffect(()=>{\r\n        console.log(market)\r\n        if(market){\r\n            getDetailData.open(market.market, coinDispatch);\r\n        }\r\n        return ()=>{\r\n            getDetailData.close();\r\n        }\r\n    },[params])\r\n\r\n    return(\r\n        <div className=\"Order\">\r\n            <h1>Order</h1>\r\n            {market===undefined &&\r\n                <h2>\r\n                    Not Found Coin {params}\r\n                </h2>\r\n            }\r\n            {market!==undefined && market.loaded &&\r\n            <>\r\n                <CoinDetail info={market}/>\r\n                <OrderBook info={market}/>\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order;\r\n","import Axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useCoinDispatch, useCoinState } from \"../Context/CoinContext\";\r\n\r\nfunction ChartPage(){\r\n    const [chartData, setChartData] = useState([{}]);\r\n    const [lastDataTime, setLastDataTime] = useState([1,0]);\r\n    \r\n    const coinState = useCoinState();\r\n    const coinDispatch = useCoinDispatch();\r\n    \r\n    const params = useParams().id;\r\n\r\n    const market = coinState.markets.find(item => item.market.split('-')[1]===params)\r\n\r\n    const options = {\r\n      chart: {\r\n        type: 'candlestick',\r\n        height: 200,\r\n        toolbar:{\r\n            show:false,\r\n            autoSelected:'pan',\r\n            tools:{\r\n                zoom:false\r\n            }\r\n        },\r\n        events:{\r\n            scrolled: async(_, { xaxis }) => {\r\n                if(xaxis.min<lastDataTime[0]){\r\n                    const ts = new Date(lastDataTime[1])\r\n                    let message;\r\n                    if(ts.getUTCHours()<10) message = `https://api.upbit.com/v1/candles/minutes/60?market=KRW-${params}&count=${lastDataTime[0]-xaxis.min}&to=${ts.getUTCFullYear()}-${ts.getUTCMonth()+1}-${ts.getUTCDate()} 0${ts.getUTCHours()}:${ts.getUTCMinutes()}:${ts.getUTCSeconds()}`\r\n                    else message = `https://api.upbit.com/v1/candles/minutes/60?market=KRW-${params}&count=${lastDataTime[0]-xaxis.min}&to=${ts.getUTCFullYear()}-${ts.getUTCMonth()+1}-${ts.getUTCDate()} ${ts.getUTCHours()}:${ts.getUTCMinutes()}:${ts.getUTCSeconds()}`\r\n                    \r\n                    const response = await Axios.get(message);\r\n                    const data = response.data.map((item)=>{\r\n                        return {\r\n                            x: new Date(item.timestamp),\r\n                            y:[\r\n                                item.opening_price,\r\n                                item.high_price,\r\n                                item.low_price,\r\n                                item.trade_price\r\n                            ]\r\n                        }\r\n                    }).reverse();\r\n                    setLastDataTime([xaxis.min<lastDataTime[0]? xaxis.min:lastDataTime[0] ,response.data[response.data.length-1].timestamp])\r\n                    setChartData([{data:data.concat(chartData[0].data)}])\r\n                }\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    useEffect(async()=>{\r\n        const response = await Axios.get(`https://api.upbit.com/v1/candles/minutes/60?market=KRW-${params}&count=40`);\r\n        const data = response.data.map((item)=>{\r\n            return {\r\n                x: new Date(item.timestamp),\r\n                y:[\r\n                    item.opening_price,\r\n                    item.high_price,\r\n                    item.low_price,\r\n                    item.trade_price\r\n                ],\r\n                timestamp: item.timestamp\r\n            }\r\n        }).reverse();\r\n        setChartData([{data:data}])\r\n        setLastDataTime([1,data[0].timestamp])\r\n    },[params])\r\n\r\n    return(\r\n        <div className=\"ChartPage\">\r\n            <h1>Chart - {params}</h1>\r\n            <h2>{lastDataTime[1]}</h2>\r\n            {market===undefined &&\r\n                <h2>\r\n                    Not Found Coin {params}\r\n                </h2>\r\n            }\r\n            {market &&\r\n            <>\r\n              <ReactApexChart options={options} series={chartData} type=\"candlestick\" width={1000} />\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartPage;\r\n","function About() {\r\n    return(\r\n        <div className=\"About\">\r\n            <h1>About</h1>\r\n            <h3>정우철이 만들었어요!</h3>\r\n            <h3>웹 어플리케이션으로 어떤 재밌고 유용한걸 만들 수 있을까?</h3>\r\n            <h3>사용(새로 공부한) 기술</h3>\r\n            <h3>-React</h3>\r\n            <h5>-Hook(useState, useEffect, useReducer...)</h5>\r\n            <h5>-Context API</h5>\r\n            <h5>-Redux를 시도하려고 공부는 했음(적용만 안함) / Context API 가 편한거 같아요...</h5>\r\n            <h3>-Rest API</h3>\r\n            <h3>-Web Socket (다음엔 Socket.io)</h3>\r\n            <h3>-Chart library(?)</h3>\r\n            <h3>-CSS Animation Font</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import { useEffect } from \"react\";\r\nimport {\r\n    HashRouter as Router, Route, Switch,\r\n    // Switch,\r\n    // Route,\r\n    // Link\r\n} from \"react-router-dom\";\r\nimport { useCoinDispatch, useCoinState } from \"../Context/CoinContext\";\r\nimport { getMarkets, getRealTimeData } from \"../Controller/CoinController\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nimport '../CSS/CoinTrade.css';\r\nimport Home from \"./Home\";\r\nimport Order from \"./Order\";\r\nimport ChartPage from \"./ChartPage\";\r\nimport About from \"./About\";\r\n\r\nfunction CoinTrade() {\r\n    const coinState = useCoinState();\r\n    const coinDispatch = useCoinDispatch();\r\n\r\n    //Markets목록 가져오기\r\n    useEffect(()=>{\r\n        coinDispatch({\r\n            type:\"GET_MARKETS\"\r\n        })\r\n        let socket;\r\n        try{\r\n            getMarkets()\r\n            .then((markets)=>{\r\n                coinDispatch({\r\n                    type: \"GET_MARKETS_SUC\",\r\n                    markets\r\n                })\r\n                return markets\r\n            })\r\n            .then((markets)=>{\r\n                coinDispatch({\r\n                    type: \"UPDATE_MARKET\"\r\n                })\r\n                getRealTimeData(socket, markets, coinState, coinDispatch)\r\n            })\r\n        } catch(error){\r\n            console.log(error)\r\n            coinDispatch({\r\n                type: \"GET_MARKETS_FAIL\"\r\n            })\r\n        }\r\n        return(()=>{\r\n            if(socket) socket.close()\r\n        })\r\n    },[coinDispatch])\r\n\r\n    return(\r\n        <div className=\"CoinTrade\">\r\n            <div className=\"Screen\" ></div>\r\n            <Router>\r\n                <Navigation/>\r\n                <div className=\"contents\">\r\n                    <Switch>\r\n                        <Route path='/' exact component={Home} />\r\n                        <Route path='/order/:id' exact component={Order} />\r\n                        <Route path='/chart/:id' exact component={ChartPage} />\r\n                        <Route path='/setting' exact component={Home} />\r\n                        <Route path='/about' exact component={About} />\r\n                        <Route path='/*' exact>\r\n                            Wrong page\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinTrade;\r\n","import './App.css';\n\nimport { CoinProvider } from './Context/CoinContext'\nimport { AccountProvider } from './Context/AccountContext'\nimport CoinTrade from './Components/CoinTrade'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AccountProvider>\n        <CoinProvider>\n          <CoinTrade/>\n        </CoinProvider>\n      </AccountProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}